import cv2 as cv
import numpy as np


if __name__ == '__main__':

    img = cv.imread('test.png')

    # 四、图像金字塔（卷积原理）
    # 为什么要生成图像金字塔，图像金字塔能干啥？
    # 提取更有用的特征；避免模型过拟合；
    # 利用金字塔来检测不同尺度下的物体；图像金字塔用的最多的就是用在SIFT算法中
    # 通过下采样生成一个金字塔，最简单的（不考虑滤波器），不断地删除图像的偶数行和偶数列，重复该过程
    # 通过上采样生成一个金字塔，最简单的，在每列像素点的右边插入值为0的列，在每行像素点下面插入值为0的行，不断重复
    # 金字塔的上下采样虽然可以将尺寸还原回来，但是像素数值发生了不可逆的变化

    # 高斯金字塔
    # 下采样，图像变小(1/2)，使用高斯卷积核进行操作，然后删除所有偶数行和列
    img3 = cv.pyrDown(img)
    # 上采样，图像变大(1/2)，在每个方向上扩大为原来的两倍，新增的行和列使用0填充，使用高斯卷积核对新增元素进行填充
    img = cv.pyrUp(img3)

    # 拉普拉斯金字塔（了解）
    # 拉普拉斯金字塔是在高斯金字塔的基础上生成的
    # 虽然高斯金字塔用高斯核过滤了一遍，但还是有信息丢失，而这些丢失的信息就是拉普拉斯金字塔
    # 拉普拉斯金字塔作用：
    # 能够恢复图像的细节，从高层的小尺寸的特征图中提取特征后，
    # 还能通过拉普拉斯金字塔数据找回高层像素点对应的底层清晰度更高的图像，找到更多图像的细节
    # 也就是使用原始图像减去高斯金字塔的值，要注意尺寸大小要一致
    img2 = cv.pyrDown(img)
    lapulasi = img - cv.pyrUp(img2)